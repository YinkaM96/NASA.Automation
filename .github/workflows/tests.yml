name: NASA Automation Tests

on:
  push:
    branches: [ main, development-branch ]
  pull_request:
    branches: [ main, development-branch ]

jobs:
  tests:
    name: Run API + UI Tests (Allure Combined)
    runs-on: ubuntu-latest

    steps:
      # ------------------------------
      # SETUP
      # ------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Install Playwright CLI and browsers
        run: |
          dotnet tool install --global Microsoft.Playwright.CLI
          playwright install --with-deps

      - name: Install Allure CLI
        run: npm install -g allure-commandline --save-dev

      # ------------------------------
      # API TESTS
      # ------------------------------
      - name: Run SpecFlow API tests (@api)
        run: dotnet test --configuration Release \
              --filter "TestCategory=api" \
              --no-build \
              --logger "trx;LogFileName=api_results.trx" \
              --results-directory ./AllureResults
        env:
          HEADLESS: true
          ALLURE_SUITE: "API Tests"
          ALLURE_EPIC: "NASA DONKI API"

      # ------------------------------
      # UI TESTS
      # ------------------------------
      - name: Run SpecFlow UI tests (@ui)
        run: dotnet test --configuration Release \
              --filter "TestCategory=ui" \
              --no-build \
              --logger "trx;LogFileName=ui_results.trx" \
              --results-directory ./AllureResults
        env:
          HEADLESS: true
          ALLURE_SUITE: "UI Tests"
          ALLURE_EPIC: "NASA API Sign-Up Flow"

      # ------------------------------
      # REPORT GENERATION
      # ------------------------------
      - name: Generate combined Allure report
        run: allure generate ./AllureResults --clean -o ./AllureReport

      - name: Upload Allure report (combined)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: AllureReport
          path: ./AllureReport

      - name: Upload raw Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: AllureResults
          path: ./AllureResults
